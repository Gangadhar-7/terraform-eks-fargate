apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: jenkins
  name: ingress-k8s
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-2016-08
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-south-1:004468257635:certificate/6b116af7-a1c8-4173-8ce1-556f140e08ce
    external-dns.alpha.kubernetes.io/hostname: mumbai-eks.recruitcrm.net
spec:
  ingressClassName: alb
  rules:
    - host: mumbai-eks.recruitcrm.net
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: myservice
                port:
                  number: 80   

          # - pathType: Prefix
          #   path: /
          #   backend:
          #     service:
          #       name: myservice
          #       port:
          #         number: 8080
  

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: jenkins-ingress
#   labels:
#     app: jenkins-ingress
#   annotations:
#     # Ingress Core Settings  
#     kubernetes.io/ingress.class: "my-aws-ingress-class"
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     # Health Check Settings
#     alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
#     alb.ingress.kubernetes.io/healthcheck-port: traffic-port
#     #Important Note:  Need to add health check path annotations in service level if we are planning to use multiple targets in a load balancer    
#     #alb.ingress.kubernetes.io/healthcheck-path: /usermgmt/health-status
#     alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
#     alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
#     alb.ingress.kubernetes.io/success-codes: '200'
#     alb.ingress.kubernetes.io/healthy-threshold-count: '2'
#     alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
#     ## SSL Settings
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
#     # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-south-1:004468257635:certificate/6b116af7-a1c8-4173-8ce1-556f140e08ce
#     #alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-1-2017-01 #Optional (Picks default if not used)    
#     # SSL Redirect Setting
#     alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'   
#     # External DNS - For creating a Record Set in Route53
#     # external-dns.alpha.kubernetes.io/hostname: mumbai-eks.recruitcrm.net      
# spec:
#   rules:
#     - host: mumbai-eks.recruitcrm.net    # SSL Setting (Optional only if we are not using certificate-arn annotation)
#       http:
#         paths:
#           - pathType: Prefix
#             path: /
#             backend:
#               service:
#                 name: myservice
#                 port:
#                   number: 80    
